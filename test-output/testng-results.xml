<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="15" passed="10" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-12-10T11:36:32 IST" name="Default suite" finished-at="2020-12-10T11:36:33 IST" duration-ms="222">
    <groups>
    </groups>
    <test started-at="2020-12-10T11:36:32 IST" name="Default test" finished-at="2020-12-10T11:36:33 IST" duration-ms="222">
      <class name="com.stackroute.suite1.DemoTest1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:32 IST" name="beforeSuite" finished-at="2020-12-10T11:36:32 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="beforeClass" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test01()[pri:1, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="test01" finished-at="2020-12-10T11:36:33 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test02()[pri:2, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="test02" finished-at="2020-12-10T11:36:33 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[4 is not equals to 5 expected [5] but found [4]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 4 is not equals to 5 expected [5] but found [4]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at com.stackroute.suite1.DemoTest1.test02(DemoTest1.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test03()[pri:3, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="test03" finished-at="2020-12-10T11:36:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="afterClass" finished-at="2020-12-10T11:36:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.stackroute.suite1.DemoTest1@3972a855]" started-at="2020-12-10T11:36:33 IST" name="afterSuite" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.stackroute.suite1.DemoTest1 -->
      <class name="com.stackroute.suite2.NewDemoTest2">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.stackroute.suite2.NewDemoTest2@503d687a]" started-at="2020-12-10T11:36:33 IST" name="beforeClass" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test01()[pri:1, instance:com.stackroute.suite2.NewDemoTest2@503d687a]" started-at="2020-12-10T11:36:33 IST" name="test01" finished-at="2020-12-10T11:36:33 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest2@503d687a]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest2@503d687a]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest2@503d687a]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test02()[pri:2, instance:com.stackroute.suite2.NewDemoTest2@503d687a]" started-at="2020-12-10T11:36:33 IST" name="test02" finished-at="2020-12-10T11:36:33 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Demotest2 -- 4 is not equals to 5 expected [5] but found [4]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Demotest2 -- 4 is not equals to 5 expected [5] but found [4]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at com.stackroute.suite2.NewDemoTest2.test02(NewDemoTest2.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest2@503d687a]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest2@503d687a]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test03()[pri:3, instance:com.stackroute.suite2.NewDemoTest2@503d687a]" started-at="2020-12-10T11:36:33 IST" name="test03" finished-at="2020-12-10T11:36:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest2@503d687a]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.stackroute.suite2.NewDemoTest2@503d687a]" started-at="2020-12-10T11:36:33 IST" name="afterClass" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.stackroute.suite2.NewDemoTest2 -->
      <class name="com.stackroute.suite2.NewDemoTest1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:32 IST" name="beforeSuite" finished-at="2020-12-10T11:36:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="beforeClass" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test01()[pri:1, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="test01" finished-at="2020-12-10T11:36:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test02()[pri:2, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="test02" finished-at="2020-12-10T11:36:33 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[4 is not equals to 5 expected [5] but found [4]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 4 is not equals to 5 expected [5] but found [4]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at com.stackroute.suite2.NewDemoTest1.test02(NewDemoTest1.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test03()[pri:3, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="test03" finished-at="2020-12-10T11:36:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="afterClass" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.stackroute.suite2.NewDemoTest1@62e7f11d]" started-at="2020-12-10T11:36:33 IST" name="afterSuite" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.stackroute.suite2.NewDemoTest1 -->
      <class name="com.stackroute.suite1.DemoTest3">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.stackroute.suite1.DemoTest3@6a370f4]" started-at="2020-12-10T11:36:33 IST" name="beforeClass" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite1.DemoTest3@6a370f4]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test01()[pri:1, instance:com.stackroute.suite1.DemoTest3@6a370f4]" started-at="2020-12-10T11:36:33 IST" name="test01" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite1.DemoTest3@6a370f4]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test02()[pri:2, instance:com.stackroute.suite1.DemoTest3@6a370f4]" started-at="2020-12-10T11:36:33 IST" name="test02" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Demotest3 -- 4 is not equals to 5 expected [5] but found [4]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Demotest3 -- 4 is not equals to 5 expected [5] but found [4]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at com.stackroute.suite1.DemoTest3.test02(DemoTest3.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite1.DemoTest3@6a370f4]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite1.DemoTest3@6a370f4]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test03()[pri:3, instance:com.stackroute.suite1.DemoTest3@6a370f4]" started-at="2020-12-10T11:36:33 IST" name="test03" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite1.DemoTest3@6a370f4]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite1.DemoTest3@6a370f4]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.stackroute.suite1.DemoTest3@6a370f4]" started-at="2020-12-10T11:36:33 IST" name="afterClass" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.stackroute.suite1.DemoTest3 -->
      <class name="com.stackroute.suite1.DemoTest2">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.stackroute.suite1.DemoTest2@2abf4075]" started-at="2020-12-10T11:36:33 IST" name="beforeClass" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite1.DemoTest2@2abf4075]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test01()[pri:1, instance:com.stackroute.suite1.DemoTest2@2abf4075]" started-at="2020-12-10T11:36:33 IST" name="test01" finished-at="2020-12-10T11:36:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite1.DemoTest2@2abf4075]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite1.DemoTest2@2abf4075]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test02()[pri:2, instance:com.stackroute.suite1.DemoTest2@2abf4075]" started-at="2020-12-10T11:36:33 IST" name="test02" finished-at="2020-12-10T11:36:33 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Demotest2 -- 4 is not equals to 5 expected [5] but found [4]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Demotest2 -- 4 is not equals to 5 expected [5] but found [4]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at com.stackroute.suite1.DemoTest2.test02(DemoTest2.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite1.DemoTest2@2abf4075]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test03()[pri:3, instance:com.stackroute.suite1.DemoTest2@2abf4075]" started-at="2020-12-10T11:36:33 IST" name="test03" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.stackroute.suite1.DemoTest2@2abf4075]" started-at="2020-12-10T11:36:33 IST" name="beforeMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.stackroute.suite1.DemoTest2@2abf4075]" started-at="2020-12-10T11:36:33 IST" name="afterMethod" finished-at="2020-12-10T11:36:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.stackroute.suite1.DemoTest2@2abf4075]" started-at="2020-12-10T11:36:33 IST" name="afterClass" finished-at="2020-12-10T11:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.stackroute.suite1.DemoTest2 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
